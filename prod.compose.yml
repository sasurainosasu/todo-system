services:
  #--------------------------------
  # Nginx (リバースプロキシ)
  #--------------------------------
  nginx:
    image: nginx:latest
    container_name: prod-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginxの設定ファイルをマウント
      - ./docker/nginx/prod.default.conf:/etc/nginx/conf.d/default.conf:ro
      # SSL証明書をマウント
      - ./certs:/etc/letsencrypt
      - ./docker/certbot:/var/www/certbot  # ✅ これを追加・修正
      # appディレクトリをマウントしてNginxから参照できるようにする
      - ./app:/var/www/html
    networks:
      - app-network
    depends_on:
      php:
        condition: service_started
      frontend:
        condition: service_started
    restart: always

  #--------------------------------
  # Certbot (Let's Encrypt証明書管理)
  #--------------------------------
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      # SSL証明書の保存先
      - ./certs:/etc/letsencrypt
      - ./docker/certbot:/var/www/certbot  # ✅ これを追加・修正
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    networks:
      - app-network
    restart: always

  #--------------------------------
  # PHP-FPM (バックエンド)
  #--------------------------------
  php:
    container_name: prod-php
    build:
      context: .
      dockerfile: ./docker/php/prod.Dockerfile
    volumes:
      - ./app:/var/www/html
      - ./php-lib:/var/www/php-lib
    environment:
      TZ: Asia/Tokyo
    env_file:
      - .env_prod
    expose:
      - "9000"
    networks:
      - app-network
    restart: always

  #--------------------------------
  # Next.js (フロントエンド)
  #--------------------------------
  frontend:
    container_name: prod-frontend
    build:
      context: .
      dockerfile: ./docker/frontend/prod.Dockerfile
    volumes:
      - ./app/frontend/.next:/app/.next
      - ./app/frontend/public:/app/public
      - /app/node_modules
    env_file:
      - .env_prod
    expose:
      - "3000"
    networks:
      - app-network
    restart: always
  
  #--------------------------------
  # MySQL (データベース)
  #--------------------------------
  mysql:
    container_name: prod-mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpassword
      TZ: Asia/Tokyo
    env_file:
      - .env_prod
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sql:/docker-entrypoint-initdb.d
    networks:
      - app-network

# 名前付きボリュームの定義
volumes:
  db-data:
  certs:

# サービスが接続するネットワークの定義
networks:
  app-network:
    driver: bridge