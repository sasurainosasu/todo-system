version: '3.8'

services:
  #--------------------------------
  # リバースプロキシ
  #--------------------------------
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    networks:
      - app-network
    restart: always

  #--------------------------------
  # SSL証明書自動取得コンテナ
  #--------------------------------
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      # 👈 ここをあなたのメールアドレスに置き換えてください
      - DEFAULT_EMAIL=your-email@example.com
    networks:
      - app-network
    depends_on:
      - nginx-proxy
    restart: always

  #--------------------------------
  # PHP-FPM
  #--------------------------------
  php:
    container_name: prod-php
    build:
      context: .
      dockerfile: ./docker/php/prod.Dockerfile
    volumes:
      - ./app:/var/www/html
    environment:
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your_email@gmail.com
      - SMTP_PASS=your_app_password
      # 👈 Nginx-proxyがこの環境変数を読み取ります
      - VIRTUAL_HOST=api.example.com
      # 👈 acme-companionがこの環境変数を読み取り、証明書を取得・更新します
      - LETSENCRYPT_HOST=api.example.com
      # 👈 ここをあなたのメールアドレスに置き換えてください
      - LETSENCRYPT_EMAIL=your-email@example.com
    env_file:
      - prod.env
    networks:
      - app-network
    restart: always

  #--------------------------------
  # Next.js (フロントエンド)
  #--------------------------------
  frontend:
    container_name: prod-frontend
    build:
      context: .
      dockerfile: ./docker/frontend/prod.Dockerfile
    volumes:
      - ./app/frontend/.next:/app/.next
      - ./app/frontend/public:/app/public
      - /app/node_modules
    expose:
      # 👈 Nginx-proxyに公開するポート
      - "3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      # 👈 ここを実際のドメインに設定
      - VIRTUAL_HOST=app.example.com
      # 👈 ここも実際のドメインに設定
      - LETSENCRYPT_HOST=app.example.com
      # 👈 ここをあなたのメールアドレスに置き換えてください
      - LETSENCRYPT_EMAIL=your-email@example.com
    networks:
      - app-network
    tty: true
    restart: always
    
  #--------------------------------
  # MySQL (データベース)
  #--------------------------------
  mysql:
    container_name: prod-mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpassword
      TZ: Asia/Tokyo
    env_file:
      - prod.env
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sql:/docker-entrypoint-initdb.d
    networks:
      - app-network
      
# 名前付きボリュームの定義
volumes:
  db-data:
  certs:
  vhost.d:
  html:

# サービスが接続するネットワークの定義
networks:
  app-network:
    driver: bridge